{"version":3,"file":"esri-leaflet-renderers.js","sources":["../src/Symbols/Symbol.js","../node_modules/leaflet-shape-markers/src/ShapeMarker.js","../node_modules/leaflet-shape-markers/src/CrossMarker.js","../node_modules/leaflet-shape-markers/src/XMarker.js","../node_modules/leaflet-shape-markers/src/SquareMarker.js","../node_modules/leaflet-shape-markers/src/DiamondMarker.js","../src/Symbols/PointSymbol.js","../src/Symbols/LineSymbol.js","../src/Symbols/PolygonSymbol.js","../src/Renderers/Renderer.js","../src/Renderers/ClassBreaksRenderer.js","../src/Renderers/UniqueValueRenderer.js","../src/Renderers/SimpleRenderer.js","../src/FeatureLayerHook.js","../src/EsriLeafletRenderers.js"],"sourcesContent":["import { Class } from 'leaflet';\n\nexport var Symbol = Class.extend({\n  initialize: function (symbolJson, options) {\n    this._symbolJson = symbolJson;\n    this.val = null;\n    this._styles = {};\n    this._isDefault = false;\n    this._layerTransparency = 1;\n    if (options && options.layerTransparency) {\n      this._layerTransparency = 1 - (options.layerTransparency / 100.0);\n    }\n  },\n\n  // the geojson values returned are in points\n  pixelValue: function (pointValue) {\n    return pointValue * 1.333;\n  },\n\n  // color is an array [r,g,b,a]\n  colorValue: function (color) {\n    return 'rgb(' + color[0] + ',' + color[1] + ',' + color[2] + ')';\n  },\n\n  alphaValue: function (color) {\n    var alpha = color[3] / 255.0;\n    return alpha * this._layerTransparency;\n  },\n\n  getSize: function (feature, sizeInfo) {\n    var attr = feature.properties;\n    var field = sizeInfo.field;\n    var size = 0;\n    var featureValue = null;\n\n    if (field) {\n      featureValue = attr[field];\n      var minSize = sizeInfo.minSize;\n      var maxSize = sizeInfo.maxSize;\n      var minDataValue = sizeInfo.minDataValue;\n      var maxDataValue = sizeInfo.maxDataValue;\n      var featureRatio;\n      var normField = sizeInfo.normalizationField;\n      var normValue = attr ? parseFloat(attr[normField]) : undefined;\n\n      if (featureValue === null || (normField && ((isNaN(normValue) || normValue === 0)))) {\n        return null;\n      }\n\n      if (!isNaN(normValue)) {\n        featureValue /= normValue;\n      }\n\n      if (minSize !== null && maxSize !== null && minDataValue !== null && maxDataValue !== null) {\n        if (featureValue <= minDataValue) {\n          size = minSize;\n        } else if (featureValue >= maxDataValue) {\n          size = maxSize;\n        } else {\n          featureRatio = (featureValue - minDataValue) / (maxDataValue - minDataValue);\n          size = minSize + (featureRatio * (maxSize - minSize));\n        }\n      }\n      size = isNaN(size) ? 0 : size;\n    }\n    return size;\n  },\n\n  getColor: function (feature, colorInfo) {\n    // required information to get color\n    if (!(feature.properties && colorInfo && colorInfo.field && colorInfo.stops)) {\n      return null;\n    }\n\n    var attr = feature.properties;\n    var featureValue = attr[colorInfo.field];\n    var lowerBoundColor, upperBoundColor, lowerBound, upperBound;\n    var normField = colorInfo.normalizationField;\n    var normValue = attr ? parseFloat(attr[normField]) : undefined;\n    if (featureValue === null || (normField && ((isNaN(normValue) || normValue === 0)))) {\n      return null;\n    }\n\n    if (!isNaN(normValue)) {\n      featureValue /= normValue;\n    }\n\n    if (featureValue <= colorInfo.stops[0].value) {\n      return colorInfo.stops[0].color;\n    }\n    var lastStop = colorInfo.stops[colorInfo.stops.length - 1];\n    if (featureValue >= lastStop.value) {\n      return lastStop.color;\n    }\n\n    // go through the stops to find min and max\n    for (var i = 0; i < colorInfo.stops.length; i++) {\n      var stopInfo = colorInfo.stops[i];\n\n      if (stopInfo.value <= featureValue) {\n        lowerBoundColor = stopInfo.color;\n        lowerBound = stopInfo.value;\n      } else if (stopInfo.value > featureValue) {\n        upperBoundColor = stopInfo.color;\n        upperBound = stopInfo.value;\n        break;\n      }\n    }\n\n    // feature falls between two stops, interplate the colors\n    if (!isNaN(lowerBound) && !isNaN(upperBound)) {\n      var range = upperBound - lowerBound;\n      if (range > 0) {\n        // more weight the further it is from the lower bound\n        var upperBoundColorWeight = (featureValue - lowerBound) / range;\n        if (upperBoundColorWeight) {\n          // more weight the further it is from the upper bound\n          var lowerBoundColorWeight = (upperBound - featureValue) / range;\n          if (lowerBoundColorWeight) {\n            // interpolate the lower and upper bound color by applying the\n            // weights to each of the rgba colors and adding them together\n            var interpolatedColor = [];\n            for (var j = 0; j < 4; j++) {\n              interpolatedColor[j] = Math.round((lowerBoundColor[j] * lowerBoundColorWeight) + (upperBoundColor[j] * upperBoundColorWeight));\n            }\n            return interpolatedColor;\n          } else {\n            // no difference between featureValue and upperBound, 100% of upperBoundColor\n            return upperBoundColor;\n          }\n        } else {\n          // no difference between featureValue and lowerBound, 100% of lowerBoundColor\n          return lowerBoundColor;\n        }\n      }\n    }\n    // if we get to here, none of the cases apply so return null\n    return null;\n  }\n});\n\n// export function symbol (symbolJson) {\n//   return new Symbol(symbolJson);\n// }\n\nexport default Symbol;\n","import L from 'leaflet';\n\nexport var ShapeMarker = L.Path.extend({\n\n  initialize: function (latlng, size, options) {\n    L.setOptions(this, options);\n    this._size = size;\n    this._latlng = L.latLng(latlng);\n    this._svgCanvasIncludes();\n  },\n\n  toGeoJSON: function () {\n    return L.GeoJSON.getFeature(this, {\n      type: 'Point',\n      coordinates: L.GeoJSON.latLngToCoords(this.getLatLng())\n    });\n  },\n\n  _svgCanvasIncludes: function () {\n    // implement in sub class\n  },\n\n  _project: function () {\n    this._point = this._map.latLngToLayerPoint(this._latlng);\n  },\n\n  _update: function () {\n    if (this._map) {\n      this._updatePath();\n    }\n  },\n\n  _updatePath: function () {\n    // implement in sub class\n  },\n\n  setLatLng: function (latlng) {\n    this._latlng = L.latLng(latlng);\n    this.redraw();\n    return this.fire('move', {latlng: this._latlng});\n  },\n\n  getLatLng: function () {\n    return this._latlng;\n  },\n\n  setSize: function (size) {\n    this._size = size;\n    return this.redraw();\n  },\n\n  getSize: function () {\n    return this._size;\n  },\n\n  // NOTE: Needed by the leaflet `Canvas` renderer for interactivity\n  // For more details please see https://github.com/boss-solutions/boss_maps/issues/200#issuecomment-1743215427\n  // and https://github.com/Esri/Leaflet.shapeMarkers/issues/26\n\t_containsPoint: function (p) {\n    if (p) {\n\t\t   return p.distanceTo(this._point) <= this.getSize() + this._clickTolerance();\n    }\n    return false;\n\t},\n\n  _updateBounds: function () {\n    // NOTE: there is no bounds to update so this is a dummy method to avoid errors\n    // For more details please see here https://github.com/Esri/esri-leaflet/issues/1368\n  }\n\n});\n","import L from 'leaflet';\nimport { ShapeMarker } from './ShapeMarker';\n\nexport var CrossMarker = ShapeMarker.extend({\n\n  initialize: function (latlng, size, options) {\n    ShapeMarker.prototype.initialize.call(this, latlng, size, options);\n  },\n\n  _updatePath: function () {\n    this._renderer._updateCrossMarker(this);\n  },\n\n  _svgCanvasIncludes: function () {\n    L.Canvas.include({\n      _updateCrossMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n        var ctx = this._ctx;\n\n        ctx.beginPath();\n        ctx.moveTo(latlng.x, latlng.y + offset);\n        ctx.lineTo(latlng.x, latlng.y - offset);\n        this._fillStroke(ctx, layer);\n\n        ctx.moveTo(latlng.x - offset, latlng.y);\n        ctx.lineTo(latlng.x + offset, latlng.y);\n        this._fillStroke(ctx, layer);\n      }\n    });\n\n    L.SVG.include({\n      _updateCrossMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n\n        if (L.Browser.vml) {\n          latlng._round();\n          offset = Math.round(offset);\n        }\n\n        var str = 'M' + latlng.x + ',' + (latlng.y + offset) +\n          'L' + latlng.x + ',' + (latlng.y - offset) +\n          'M' + (latlng.x - offset) + ',' + latlng.y +\n          'L' + (latlng.x + offset) + ',' + latlng.y;\n\n        this._setPath(layer, str);\n      }\n    });\n  }\n});\n\nexport var crossMarker = function (latlng, size, options) {\n  return new CrossMarker(latlng, size, options);\n};\n\nexport default crossMarker;\n","import L from 'leaflet';\nimport { ShapeMarker } from './ShapeMarker';\n\nexport var XMarker = ShapeMarker.extend({\n\n  initialize: function (latlng, size, options) {\n    ShapeMarker.prototype.initialize.call(this, latlng, size, options);\n  },\n\n  _updatePath: function () {\n    this._renderer._updateXMarker(this);\n  },\n\n  _svgCanvasIncludes: function () {\n    L.Canvas.include({\n      _updateXMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n        var ctx = this._ctx;\n\n        ctx.beginPath();\n\n        ctx.moveTo(latlng.x + offset, latlng.y + offset);\n        ctx.lineTo(latlng.x - offset, latlng.y - offset);\n        this._fillStroke(ctx, layer);\n      }\n    });\n\n    L.SVG.include({\n      _updateXMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n\n        if (L.Browser.vml) {\n          latlng._round();\n          offset = Math.round(offset);\n        }\n\n        var str = 'M' + (latlng.x + offset) + ',' + (latlng.y + offset) +\n          'L' + (latlng.x - offset) + ',' + (latlng.y - offset) +\n          'M' + (latlng.x - offset) + ',' + (latlng.y + offset) +\n          'L' + (latlng.x + offset) + ',' + (latlng.y - offset);\n\n        this._setPath(layer, str);\n      }\n    });\n  }\n});\n\nexport var xMarker = function (latlng, size, options) {\n  return new XMarker(latlng, size, options);\n};\n\nexport default xMarker;\n","import L from 'leaflet';\nimport { ShapeMarker } from './ShapeMarker';\n\nexport var SquareMarker = ShapeMarker.extend({\n  options: {\n    fill: true\n  },\n\n  initialize: function (latlng, size, options) {\n    ShapeMarker.prototype.initialize.call(this, latlng, size, options);\n  },\n\n  _updatePath: function () {\n    this._renderer._updateSquareMarker(this);\n  },\n\n  _svgCanvasIncludes: function () {\n    L.Canvas.include({\n      _updateSquareMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n        var ctx = this._ctx;\n\n        ctx.beginPath();\n\n        ctx.moveTo(latlng.x + offset, latlng.y + offset);\n        ctx.lineTo(latlng.x - offset, latlng.y + offset);\n        ctx.lineTo(latlng.x - offset, latlng.y - offset);\n        ctx.lineTo(latlng.x + offset, latlng.y - offset);\n\n        ctx.closePath();\n\n        this._fillStroke(ctx, layer);\n      }\n    });\n\n    L.SVG.include({\n      _updateSquareMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n\n        if (L.Browser.vml) {\n          latlng._round();\n          offset = Math.round(offset);\n        }\n\n        var str = 'M' + (latlng.x + offset) + ',' + (latlng.y + offset) +\n          'L' + (latlng.x - offset) + ',' + (latlng.y + offset) +\n          'L' + (latlng.x - offset) + ',' + (latlng.y - offset) +\n          'L' + (latlng.x + offset) + ',' + (latlng.y - offset);\n\n        str = str + (L.Browser.svg ? 'z' : 'x');\n\n        this._setPath(layer, str);\n      }\n    });\n  }\n});\n\nexport var squareMarker = function (latlng, size, options) {\n  return new SquareMarker(latlng, size, options);\n};\n\nexport default squareMarker;\n","import L from 'leaflet';\nimport { ShapeMarker } from './ShapeMarker';\n\nexport var DiamondMarker = ShapeMarker.extend({\n  options: {\n    fill: true\n  },\n\n  initialize: function (latlng, size, options) {\n    ShapeMarker.prototype.initialize.call(this, latlng, size, options);\n  },\n\n  _updatePath: function () {\n    this._renderer._updateDiamondMarker(this);\n  },\n\n  _svgCanvasIncludes: function () {\n    L.Canvas.include({\n      _updateDiamondMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n        var ctx = this._ctx;\n\n        ctx.beginPath();\n\n        ctx.moveTo(latlng.x, latlng.y + offset);\n        ctx.lineTo(latlng.x - offset, latlng.y);\n        ctx.lineTo(latlng.x, latlng.y - offset);\n        ctx.lineTo(latlng.x + offset, latlng.y);\n\n        ctx.closePath();\n\n        this._fillStroke(ctx, layer);\n      }\n    });\n\n    L.SVG.include({\n      _updateDiamondMarker: function (layer) {\n        var latlng = layer._point;\n        var offset = layer._size / 2.0;\n\n        if (L.Browser.vml) {\n          latlng._round();\n          offset = Math.round(offset);\n        }\n\n        var str = 'M' + latlng.x + ',' + (latlng.y + offset) +\n          'L' + (latlng.x - offset) + ',' + latlng.y +\n          'L' + latlng.x + ',' + (latlng.y - offset) +\n          'L' + (latlng.x + offset) + ',' + latlng.y;\n\n        str = str + (L.Browser.svg ? 'z' : 'x');\n\n        this._setPath(layer, str);\n      }\n    });\n  }\n});\n\nexport var diamondMarker = function (latlng, size, options) {\n  return new DiamondMarker(latlng, size, options);\n};\n\nexport default diamondMarker;\n","import {\n  marker,\n  icon as leafletIcon,\n  extend,\n  circleMarker\n} from 'leaflet';\nimport Symbol from './Symbol';\nimport { squareMarker, xMarker, crossMarker, diamondMarker } from 'leaflet-shape-markers';\n\nexport var PointSymbol = Symbol.extend({\n\n  statics: {\n    MARKERTYPES: ['esriSMSCircle', 'esriSMSCross', 'esriSMSDiamond', 'esriSMSSquare', 'esriSMSX', 'esriPMS']\n  },\n\n  initialize: function (symbolJson, options) {\n    var url;\n    Symbol.prototype.initialize.call(this, symbolJson, options);\n    if (options) {\n      this.serviceUrl = options.url;\n    }\n    if (symbolJson) {\n      if (symbolJson.type === 'esriPMS') {\n        var imageUrl = this._symbolJson.url;\n        if ((imageUrl && imageUrl.substr(0, 7) === 'http://') || (imageUrl.substr(0, 8) === 'https://')) {\n          // web image\n          url = this.sanitize(imageUrl);\n          this._iconUrl = url;\n        } else {\n          url = this.serviceUrl + 'images/' + imageUrl;\n          this._iconUrl = options && options.token ? url + '?token=' + options.token : url;\n        }\n        if (symbolJson.imageData) {\n          this._iconUrl = 'data:' + symbolJson.contentType + ';base64,' + symbolJson.imageData;\n        }\n        // leaflet does not allow resizing icons so keep a hash of different\n        // icon sizes to try and keep down on the number of icons created\n        this._icons = {};\n        // create base icon\n        this.icon = this._createIcon(this._symbolJson);\n      } else {\n        this._fillStyles();\n      }\n    }\n  },\n\n  // prevent html injection in strings\n  sanitize: function (str) {\n    if (!str) {\n      return '';\n    }\n    var text;\n    try {\n      // removes html but leaves url link text\n      text = str.replace(/<br>/gi, '\\n');\n      text = text.replace(/<p.*>/gi, '\\n');\n      text = text.replace(/<a.*href='(.*?)'.*>(.*?)<\\/a>/gi, ' $2 ($1) ');\n      text = text.replace(/<(?:.|\\s)*?>/g, '');\n    } catch (ex) {\n      text = null;\n    }\n    return text;\n  },\n\n  _fillStyles: function () {\n    if (this._symbolJson.outline && this._symbolJson.size > 0 && this._symbolJson.outline.style !== 'esriSLSNull') {\n      this._styles.stroke = true;\n      this._styles.weight = this.pixelValue(this._symbolJson.outline.width);\n      this._styles.color = this.colorValue(this._symbolJson.outline.color);\n      this._styles.opacity = this.alphaValue(this._symbolJson.outline.color);\n    } else {\n      this._styles.stroke = false;\n    }\n    if (this._symbolJson.color) {\n      this._styles.fillColor = this.colorValue(this._symbolJson.color);\n      this._styles.fillOpacity = this.alphaValue(this._symbolJson.color);\n    } else {\n      this._styles.fillOpacity = 0;\n    }\n\n    if (this._symbolJson.style === 'esriSMSCircle') {\n      this._styles.radius = this.pixelValue(this._symbolJson.size) / 2.0;\n    }\n  },\n\n  _createIcon: function (options) {\n    var width = this.pixelValue(options.width);\n    var height = width;\n    if (options.height) {\n      height = this.pixelValue(options.height);\n    }\n    var xOffset = width / 2.0;\n    var yOffset = height / 2.0;\n\n    if (options.xoffset) {\n      xOffset += this.pixelValue(options.xoffset);\n    }\n    if (options.yoffset) {\n      yOffset += this.pixelValue(options.yoffset);\n    }\n\n    var icon = leafletIcon({\n      iconUrl: this._iconUrl,\n      iconSize: [width, height],\n      iconAnchor: [xOffset, yOffset]\n    });\n    this._icons[options.width.toString()] = icon;\n    return icon;\n  },\n\n  _getIcon: function (size) {\n    // check to see if it is already created by size\n    var icon = this._icons[size.toString()];\n    if (!icon) {\n      icon = this._createIcon({ width: size });\n    }\n    return icon;\n  },\n\n  pointToLayer: function (geojson, latlng, visualVariables, options) {\n    var size = this._symbolJson.size || this._symbolJson.width;\n    if (!this._isDefault) {\n      if (visualVariables.sizeInfo) {\n        var calculatedSize = this.getSize(geojson, visualVariables.sizeInfo);\n        if (calculatedSize) {\n          size = calculatedSize;\n        }\n      }\n      if (visualVariables.colorInfo) {\n        var color = this.getColor(geojson, visualVariables.colorInfo);\n        if (color) {\n          this._styles.fillColor = this.colorValue(color);\n          this._styles.fillOpacity = this.alphaValue(color);\n        }\n      }\n    }\n\n    if (this._symbolJson.type === 'esriPMS') {\n      var layerOptions = extend({}, { icon: this._getIcon(size) }, options);\n      return marker(latlng, layerOptions);\n    }\n    size = this.pixelValue(size);\n\n    switch (this._symbolJson.style) {\n      case 'esriSMSSquare':\n        return squareMarker(latlng, size, extend({}, this._styles, options));\n      case 'esriSMSDiamond':\n        return diamondMarker(latlng, size, extend({}, this._styles, options));\n      case 'esriSMSCross':\n        return crossMarker(latlng, size, extend({}, this._styles, options));\n      case 'esriSMSX':\n        return xMarker(latlng, size, extend({}, this._styles, options));\n    }\n    this._styles.radius = size / 2.0;\n    return circleMarker(latlng, extend({}, this._styles, options));\n  }\n});\n\nexport function pointSymbol (symbolJson, options) {\n  return new PointSymbol(symbolJson, options);\n}\n\nexport default pointSymbol;\n","import Symbol from './Symbol';\n\nexport var LineSymbol = Symbol.extend({\n  statics: {\n    // Not implemented 'esriSLSNull'\n    LINETYPES: ['esriSLSDash', 'esriSLSDot', 'esriSLSDashDotDot', 'esriSLSDashDot', 'esriSLSSolid']\n  },\n  initialize: function (symbolJson, options) {\n    Symbol.prototype.initialize.call(this, symbolJson, options);\n    this._fillStyles();\n  },\n\n  _fillStyles: function () {\n    // set the defaults that show up on arcgis online\n    this._styles.lineCap = 'butt';\n    this._styles.lineJoin = 'miter';\n    this._styles.fill = false;\n    this._styles.weight = 0;\n\n    if (!this._symbolJson) {\n      return this._styles;\n    }\n\n    if (this._symbolJson.color) {\n      this._styles.color = this.colorValue(this._symbolJson.color);\n      this._styles.opacity = this.alphaValue(this._symbolJson.color);\n    }\n\n    if (!isNaN(this._symbolJson.width)) {\n      this._styles.weight = this.pixelValue(this._symbolJson.width);\n\n      var dashValues = [];\n\n      switch (this._symbolJson.style) {\n        case 'esriSLSDash':\n          dashValues = [4, 3];\n          break;\n        case 'esriSLSDot':\n          dashValues = [1, 3];\n          break;\n        case 'esriSLSDashDot':\n          dashValues = [8, 3, 1, 3];\n          break;\n        case 'esriSLSDashDotDot':\n          dashValues = [8, 3, 1, 3, 1, 3];\n          break;\n      }\n\n      // use the dash values and the line weight to set dash array\n      if (dashValues.length > 0) {\n        for (var i = 0; i < dashValues.length; i++) {\n          dashValues[i] *= this._styles.weight;\n        }\n\n        this._styles.dashArray = dashValues.join(',');\n      }\n    }\n  },\n\n  style: function (feature, visualVariables) {\n    if (!this._isDefault && visualVariables) {\n      if (visualVariables.sizeInfo) {\n        var calculatedSize = this.pixelValue(this.getSize(feature, visualVariables.sizeInfo));\n        if (calculatedSize) {\n          this._styles.weight = calculatedSize;\n        }\n      }\n      if (visualVariables.colorInfo) {\n        var color = this.getColor(feature, visualVariables.colorInfo);\n        if (color) {\n          this._styles.color = this.colorValue(color);\n          this._styles.opacity = this.alphaValue(color);\n        }\n      }\n    }\n    return this._styles;\n  }\n});\n\nexport function lineSymbol (symbolJson, options) {\n  return new LineSymbol(symbolJson, options);\n}\n\nexport default lineSymbol;\n","import Symbol from './Symbol';\nimport lineSymbol from './LineSymbol';\n\nexport var PolygonSymbol = Symbol.extend({\n  statics: {\n    // not implemented: 'esriSFSBackwardDiagonal','esriSFSCross','esriSFSDiagonalCross','esriSFSForwardDiagonal','esriSFSHorizontal','esriSFSNull','esriSFSVertical'\n    POLYGONTYPES: ['esriSFSSolid']\n  },\n  initialize: function (symbolJson, options) {\n    Symbol.prototype.initialize.call(this, symbolJson, options);\n    if (symbolJson) {\n      if (symbolJson.outline && symbolJson.outline.style === 'esriSLSNull') {\n        this._lineStyles = { weight: 0 };\n      } else {\n        this._lineStyles = lineSymbol(symbolJson.outline, options).style();\n      }\n      this._fillStyles();\n    }\n  },\n\n  _fillStyles: function () {\n    if (this._lineStyles) {\n      if (this._lineStyles.weight === 0) {\n        // when weight is 0, setting the stroke to false can still look bad\n        // (gaps between the polygons)\n        this._styles.stroke = false;\n      } else {\n        // copy the line symbol styles into this symbol's styles\n        for (var styleAttr in this._lineStyles) {\n          this._styles[styleAttr] = this._lineStyles[styleAttr];\n        }\n      }\n    }\n\n    // set the fill for the polygon\n    if (this._symbolJson) {\n      if (this._symbolJson.color &&\n          // don't fill polygon if type is not supported\n          PolygonSymbol.POLYGONTYPES.indexOf(this._symbolJson.style >= 0)) {\n        this._styles.fill = true;\n        this._styles.fillColor = this.colorValue(this._symbolJson.color);\n        this._styles.fillOpacity = this.alphaValue(this._symbolJson.color);\n      } else {\n        this._styles.fill = false;\n        this._styles.fillOpacity = 0;\n      }\n    }\n  },\n\n  style: function (feature, visualVariables) {\n    if (!this._isDefault && visualVariables && visualVariables.colorInfo) {\n      var color = this.getColor(feature, visualVariables.colorInfo);\n      if (color) {\n        this._styles.fillColor = this.colorValue(color);\n        this._styles.fillOpacity = this.alphaValue(color);\n      }\n    }\n    return this._styles;\n  }\n});\n\nexport function polygonSymbol (symbolJson, options) {\n  return new PolygonSymbol(symbolJson, options);\n}\n\nexport default polygonSymbol;\n","import { Class, Util, circleMarker } from 'leaflet';\n\nimport pointSymbol from '../Symbols/PointSymbol';\nimport lineSymbol from '../Symbols/LineSymbol';\nimport polygonSymbol from '../Symbols/PolygonSymbol';\n\nexport var Renderer = Class.extend({\n  options: {\n    proportionalPolygon: false,\n    clickable: true\n  },\n\n  initialize: function (rendererJson, options) {\n    this._rendererJson = rendererJson;\n    this._pointSymbols = false;\n    this._symbols = [];\n    this._visualVariables = this._parseVisualVariables(rendererJson.visualVariables);\n    Util.setOptions(this, options);\n  },\n\n  _parseVisualVariables: function (visualVariables) {\n    var visVars = {};\n    if (visualVariables) {\n      for (var i = 0; i < visualVariables.length; i++) {\n        visVars[visualVariables[i].type] = visualVariables[i];\n      }\n    }\n    return visVars;\n  },\n\n  _createDefaultSymbol: function () {\n    if (this._rendererJson.defaultSymbol) {\n      this._defaultSymbol = this._newSymbol(this._rendererJson.defaultSymbol);\n      this._defaultSymbol._isDefault = true;\n    }\n  },\n\n  _newSymbol: function (symbolJson) {\n    if (symbolJson.type === 'esriSMS' || symbolJson.type === 'esriPMS') {\n      this._pointSymbols = true;\n      return pointSymbol(symbolJson, this.options);\n    }\n    if (symbolJson.type === 'esriSLS') {\n      return lineSymbol(symbolJson, this.options);\n    }\n    if (symbolJson.type === 'esriSFS') {\n      return polygonSymbol(symbolJson, this.options);\n    }\n  },\n\n  _getSymbol: function () {\n    // override\n  },\n\n  attachStylesToLayer: function (layer) {\n    if (this._pointSymbols) {\n      layer.options.pointToLayer = Util.bind(this.pointToLayer, this);\n    } else {\n      layer.options.style = Util.bind(this.style, this);\n      layer._originalStyle = layer.options.style;\n    }\n  },\n\n  pointToLayer: function (geojson, latlng) {\n    var sym = this._getSymbol(geojson);\n    if (sym && sym.pointToLayer) {\n      // right now custom panes are the only option pushed through\n      return sym.pointToLayer(geojson, latlng, this._visualVariables, this.options);\n    }\n    // invisible symbology\n    return circleMarker(latlng, { radius: 0, opacity: 0 });\n  },\n\n  style: function (feature) {\n    var userStyles;\n    if (this.options.userDefinedStyle) {\n      userStyles = this.options.userDefinedStyle(feature);\n    }\n    // find the symbol to represent this feature\n    var sym = this._getSymbol(feature);\n    if (sym) {\n      return this.mergeStyles(sym.style(feature, this._visualVariables), userStyles);\n    } else {\n      // invisible symbology\n      return this.mergeStyles({ opacity: 0, fillOpacity: 0 }, userStyles);\n    }\n  },\n\n  mergeStyles: function (styles, userStyles) {\n    var mergedStyles = {};\n    var attr;\n    // copy renderer style attributes\n    for (attr in styles) {\n      if (Object.prototype.hasOwnProperty.call(styles, attr)) {\n        mergedStyles[attr] = styles[attr];\n      }\n    }\n    // override with user defined style attributes\n    if (userStyles) {\n      for (attr in userStyles) {\n        if (Object.prototype.hasOwnProperty.call(userStyles, attr)) {\n          mergedStyles[attr] = userStyles[attr];\n        }\n      }\n    }\n    return mergedStyles;\n  }\n});\n\nexport default Renderer;\n","import Renderer from './Renderer';\n\nexport var ClassBreaksRenderer = Renderer.extend({\n  initialize: function (rendererJson, options) {\n    Renderer.prototype.initialize.call(this, rendererJson, options);\n    this._field = this._rendererJson.field;\n    if (this._rendererJson.normalizationType && this._rendererJson.normalizationType === 'esriNormalizeByField') {\n      this._normalizationField = this._rendererJson.normalizationField;\n    }\n    this._createSymbols();\n  },\n\n  _createSymbols: function () {\n    var symbol;\n    var classbreaks = this._rendererJson.classBreakInfos;\n\n    this._symbols = [];\n\n    // create a symbol for each class break\n    for (var i = classbreaks.length - 1; i >= 0; i--) {\n      if (this.options.proportionalPolygon && this._rendererJson.backgroundFillSymbol) {\n        symbol = this._newSymbol(this._rendererJson.backgroundFillSymbol);\n      } else {\n        symbol = this._newSymbol(classbreaks[i].symbol);\n      }\n      symbol.val = classbreaks[i].classMaxValue;\n      this._symbols.push(symbol);\n    }\n    // sort the symbols in ascending value\n    this._symbols.sort(function (a, b) {\n      return a.val > b.val ? 1 : -1;\n    });\n    this._createDefaultSymbol();\n    this._maxValue = this._symbols[this._symbols.length - 1].val;\n  },\n\n  _getSymbol: function (feature) {\n    var val = feature.properties[this._field];\n    if (this._normalizationField) {\n      var normValue = feature.properties[this._normalizationField];\n      if (!isNaN(normValue) && normValue !== 0) {\n        val = val / normValue;\n      } else {\n        return this._defaultSymbol;\n      }\n    }\n\n    if (val > this._maxValue) {\n      return this._defaultSymbol;\n    }\n    var symbol = this._symbols[0];\n    for (var i = this._symbols.length - 1; i >= 0; i--) {\n      if (val > this._symbols[i].val) {\n        break;\n      }\n      symbol = this._symbols[i];\n    }\n    return symbol;\n  }\n});\n\nexport function classBreaksRenderer (rendererJson, options) {\n  return new ClassBreaksRenderer(rendererJson, options);\n}\n\nexport default classBreaksRenderer;\n","import Renderer from './Renderer';\n\nexport var UniqueValueRenderer = Renderer.extend({\n  initialize: function (rendererJson, options) {\n    Renderer.prototype.initialize.call(this, rendererJson, options);\n    this._field = this._rendererJson.field1;\n    this._createSymbols();\n  },\n\n  _createSymbols: function () {\n    var symbol;\n    var uniques = this._rendererJson.uniqueValueInfos;\n\n    // create a symbol for each unique value\n    for (var i = uniques.length - 1; i >= 0; i--) {\n      symbol = this._newSymbol(uniques[i].symbol);\n      symbol.val = uniques[i].value;\n      this._symbols.push(symbol);\n    }\n    this._createDefaultSymbol();\n  },\n\n  _getSymbol: function (feature) {\n    var val = feature.properties[this._field];\n    // accumulate values if there is more than one field defined\n    if (this._rendererJson.fieldDelimiter && this._rendererJson.field2) {\n      var val2 = feature.properties[this._rendererJson.field2];\n      if (val2) {\n        val += this._rendererJson.fieldDelimiter + val2;\n        var val3 = feature.properties[this._rendererJson.field3];\n        if (val3) {\n          val += this._rendererJson.fieldDelimiter + val3;\n        }\n      }\n    }\n\n    var symbol = this._defaultSymbol;\n    for (var i = this._symbols.length - 1; i >= 0; i--) {\n      // using the === operator does not work if the field\n      // of the unique renderer is not a string\n      /*eslint-disable */\n      if (this._symbols[i].val == val) {\n        symbol = this._symbols[i];\n      }\n      /* eslint-enable */\n    }\n    return symbol;\n  }\n});\n\nexport function uniqueValueRenderer (rendererJson, options) {\n  return new UniqueValueRenderer(rendererJson, options);\n}\n\nexport default uniqueValueRenderer;\n","import Renderer from './Renderer';\n\nexport var SimpleRenderer = Renderer.extend({\n  initialize: function (rendererJson, options) {\n    Renderer.prototype.initialize.call(this, rendererJson, options);\n    this._createSymbol();\n  },\n\n  _createSymbol: function () {\n    if (this._rendererJson.symbol) {\n      this._symbols.push(this._newSymbol(this._rendererJson.symbol));\n    }\n  },\n\n  _getSymbol: function () {\n    return this._symbols[0];\n  }\n});\n\nexport function simpleRenderer (rendererJson, options) {\n  return new SimpleRenderer(rendererJson, options);\n}\n\nexport default simpleRenderer;\n","import { Util, GeoJSON, geoJson } from 'leaflet';\nimport * as EsriLeaflet from 'esri-leaflet';\nimport EsriLeafletCluster, { FeatureLayer as EsriLeafletClusterFeatureLayer } from 'esri-leaflet-cluster';\nimport classBreaksRenderer from './Renderers/ClassBreaksRenderer';\nimport uniqueValueRenderer from './Renderers/UniqueValueRenderer';\nimport simpleRenderer from './Renderers/SimpleRenderer';\n\nfunction wireUpRenderers () {\n  if (this.options.ignoreRenderer) {\n    return;\n  }\n  var oldOnAdd = Util.bind(this.onAdd, this);\n  var oldUnbindPopup = Util.bind(this.unbindPopup, this);\n  var oldOnRemove = Util.bind(this.onRemove, this);\n\n  Util.bind(this.createNewLayer, this);\n\n  this.onAdd = function (map) {\n    this.metadata(function (error, response) {\n      if (error) {\n        console.warn('failed to load metadata from the service.');\n        return;\n      } if (response && response.drawingInfo) {\n        if (this.options.drawingInfo) {\n          // allow L.esri.webmap (and others) to override service symbology with info provided in layer constructor\n          response.drawingInfo = this.options.drawingInfo;\n        }\n\n        // the default pane for lines and polygons is 'overlayPane', for points it is 'markerPane'\n        if (this.options.pane === 'overlayPane' && response.geometryType === 'esriGeometryPoint') {\n          this.options.pane = 'markerPane';\n        }\n\n        this._setRenderers(response);\n        oldOnAdd(map);\n        this._addPointLayer(map);\n      }\n    }, this);\n  };\n\n  this.onRemove = function (map) {\n    oldOnRemove(map);\n    if (this._pointLayer) {\n      var pointLayers = this._pointLayer.getLayers();\n      for (var i in pointLayers) {\n        map.removeLayer(pointLayers[i]);\n      }\n    }\n  };\n\n  this.unbindPopup = function () {\n    oldUnbindPopup();\n    if (this._pointLayer) {\n      var pointLayers = this._pointLayer.getLayers();\n      for (var i in pointLayers) {\n        pointLayers[i].unbindPopup();\n      }\n    }\n  };\n\n  this._addPointLayer = function (map) {\n    if (this._pointLayer) {\n      this._pointLayer.addTo(map);\n      this._pointLayer.bringToFront();\n    }\n  };\n\n  this._createPointLayer = function () {\n    if (!this._pointLayer) {\n      this._pointLayer = geoJson();\n      // store the feature ids that have already been added to the map\n      this._pointLayerIds = {};\n\n      if (this._popup) {\n        var popupFunction = function (feature, layer) {\n          layer.bindPopup(this._popup(feature, layer), this._popupOptions);\n        };\n        this._pointLayer.options.onEachFeature = Util.bind(popupFunction, this);\n      }\n    }\n  };\n\n  this.createNewLayer = function (geojson) {\n    var fLayer = GeoJSON.geometryToLayer(geojson, this.options);\n\n    // add a point layer when the polygon is represented as proportional marker symbols\n    if (this._hasProportionalSymbols) {\n      var centroid = this.getPolygonCentroid(geojson.geometry.coordinates);\n      if (!(isNaN(centroid[0]) || isNaN(centroid[0]))) {\n        this._createPointLayer();\n\n        var featureId = geojson.id.toString();\n        // only add the feature if it does not already exist on the map\n        if (!this._pointLayerIds[featureId]) {\n          var pointjson = this.getPointJson(geojson, centroid);\n\n          this._pointLayer.addData(pointjson);\n          this._pointLayerIds[featureId] = true;\n        }\n\n        this._pointLayer.bringToFront();\n      }\n    }\n    return fLayer;\n  };\n\n  this.getPolygonCentroid = function (coordinates) {\n    var pts = coordinates[0][0];\n    if (pts.length === 2) {\n      pts = coordinates[0];\n    }\n\n    var twicearea = 0;\n    var x = 0;\n    var y = 0;\n    var nPts = pts.length;\n    var p1;\n    var p2;\n    var f;\n\n    for (var i = 0, j = nPts - 1; i < nPts; j = i++) {\n      p1 = pts[i]; p2 = pts[j];\n      twicearea += p1[0] * p2[1];\n      twicearea -= p1[1] * p2[0];\n      f = (p1[0] * p2[1]) - (p2[0] * p1[1]);\n      x += (p1[0] + p2[0]) * f;\n      y += (p1[1] + p2[1]) * f;\n    }\n    f = twicearea * 3;\n    return [x / f, y / f];\n  };\n\n  this.getPointJson = function (geojson, centroid) {\n    return {\n      type: 'Feature',\n      properties: geojson.properties,\n      id: geojson.id,\n      geometry: {\n        type: 'Point',\n        coordinates: [centroid[0], centroid[1]]\n      }\n    };\n  };\n\n  this._checkForProportionalSymbols = function (geometryType, renderer) {\n    this._hasProportionalSymbols = false;\n    if (geometryType === 'esriGeometryPolygon') {\n      if (renderer.backgroundFillSymbol) {\n        this._hasProportionalSymbols = true;\n      }\n      // check to see if the first symbol in the classbreaks is a marker symbol\n      if (renderer.classBreakInfos && renderer.classBreakInfos.length) {\n        var sym = renderer.classBreakInfos[0].symbol;\n        if (sym && (sym.type === 'esriSMS' || sym.type === 'esriPMS')) {\n          this._hasProportionalSymbols = true;\n        }\n      }\n    }\n  };\n\n  this._setRenderers = function (serviceInfo) {\n    var rend;\n    var rendererInfo = serviceInfo.drawingInfo.renderer;\n\n    var options = {\n      url: this.options.url\n    };\n\n    if (this.options.token) {\n      options.token = this.options.token;\n    }\n\n    if (this.options.pane) {\n      options.pane = this.options.pane;\n    }\n\n    if (serviceInfo.drawingInfo.transparency) {\n      options.layerTransparency = serviceInfo.drawingInfo.transparency;\n    }\n\n    if (this.options.style) {\n      options.userDefinedStyle = this.options.style;\n    }\n\n    switch (rendererInfo.type) {\n      case 'classBreaks':\n        this._checkForProportionalSymbols(serviceInfo.geometryType, rendererInfo);\n        if (this._hasProportionalSymbols) {\n          this._createPointLayer();\n          var pRend = classBreaksRenderer(rendererInfo, options);\n          pRend.attachStylesToLayer(this._pointLayer);\n          options.proportionalPolygon = true;\n        }\n        rend = classBreaksRenderer(rendererInfo, options);\n        break;\n      case 'uniqueValue':\n        rend = uniqueValueRenderer(rendererInfo, options);\n        break;\n      default:\n        rend = simpleRenderer(rendererInfo, options);\n    }\n    rend.attachStylesToLayer(this);\n  };\n}\n\nEsriLeaflet.FeatureLayer.addInitHook(wireUpRenderers);\n\nif (typeof EsriLeafletCluster !== 'undefined' && EsriLeafletClusterFeatureLayer) {\n  EsriLeafletClusterFeatureLayer.addInitHook(wireUpRenderers);\n}\n","import './FeatureLayerHook';\n\nimport packageInfo from '../package.json';\nvar version = packageInfo.version;\nexport { version as VERSION };\n\nexport { Renderer } from './Renderers/Renderer';\nexport { SimpleRenderer, simpleRenderer } from './Renderers/SimpleRenderer';\nexport { ClassBreaksRenderer, classBreaksRenderer } from './Renderers/ClassBreaksRenderer';\nexport { UniqueValueRenderer, uniqueValueRenderer } from './Renderers/UniqueValueRenderer';\n\nexport { Symbol } from './Symbols/Symbol';\nexport { PointSymbol, pointSymbol } from './Symbols/PointSymbol';\nexport { LineSymbol, lineSymbol } from './Symbols/LineSymbol';\nexport { PolygonSymbol, polygonSymbol } from './Symbols/PolygonSymbol';\n"],"names":["Symbol","Class","extend","initialize","symbolJson","options","this","_symbolJson","val","_styles","_isDefault","_layerTransparency","layerTransparency","pixelValue","pointValue","colorValue","color","alphaValue","getSize","feature","sizeInfo","attr","properties","field","size","featureValue","minSize","maxSize","minDataValue","maxDataValue","normField","normalizationField","normValue","parseFloat","undefined","isNaN","getColor","colorInfo","stops","lowerBoundColor","upperBoundColor","lowerBound","upperBound","value","lastStop","length","i","stopInfo","range","upperBoundColorWeight","lowerBoundColorWeight","interpolatedColor","j","Math","round","ShapeMarker","L","Path","latlng","setOptions","_size","_latlng","latLng","_svgCanvasIncludes","toGeoJSON","GeoJSON","getFeature","type","coordinates","latLngToCoords","getLatLng","_project","_point","_map","latLngToLayerPoint","_update","_updatePath","setLatLng","redraw","fire","setSize","_containsPoint","p","distanceTo","_clickTolerance","_updateBounds","CrossMarker","prototype","call","_renderer","_updateCrossMarker","Canvas","include","layer","offset","ctx","_ctx","beginPath","moveTo","x","y","lineTo","_fillStroke","SVG","Browser","vml","_round","str","_setPath","XMarker","_updateXMarker","SquareMarker","fill","_updateSquareMarker","closePath","svg","DiamondMarker","_updateDiamondMarker","PointSymbol","statics","MARKERTYPES","url","serviceUrl","imageUrl","substr","sanitize","_iconUrl","token","imageData","contentType","_icons","icon","_createIcon","_fillStyles","text","replace","ex","outline","style","stroke","weight","width","opacity","fillColor","fillOpacity","radius","height","xOffset","yOffset","xoffset","yoffset","leafletIcon","iconUrl","iconSize","iconAnchor","toString","_getIcon","pointToLayer","geojson","visualVariables","calculatedSize","layerOptions","marker","squareMarker","diamondMarker","crossMarker","xMarker","circleMarker","pointSymbol","LineSymbol","LINETYPES","lineCap","lineJoin","dashValues","dashArray","join","lineSymbol","PolygonSymbol","POLYGONTYPES","_lineStyles","styleAttr","indexOf","polygonSymbol","Renderer","proportionalPolygon","clickable","rendererJson","_rendererJson","_pointSymbols","_symbols","_visualVariables","_parseVisualVariables","Util","visVars","_createDefaultSymbol","defaultSymbol","_defaultSymbol","_newSymbol","_getSymbol","attachStylesToLayer","bind","_originalStyle","sym","userStyles","userDefinedStyle","mergeStyles","styles","mergedStyles","Object","hasOwnProperty","ClassBreaksRenderer","_field","normalizationType","_normalizationField","_createSymbols","symbol","classbreaks","classBreakInfos","backgroundFillSymbol","classMaxValue","push","sort","a","b","_maxValue","classBreaksRenderer","UniqueValueRenderer","field1","uniques","uniqueValueInfos","fieldDelimiter","field2","val2","val3","field3","uniqueValueRenderer","SimpleRenderer","_createSymbol","simpleRenderer","wireUpRenderers","ignoreRenderer","oldOnAdd","onAdd","oldUnbindPopup","unbindPopup","oldOnRemove","onRemove","createNewLayer","map","metadata","error","response","console","warn","drawingInfo","pane","geometryType","_setRenderers","_addPointLayer","_pointLayer","pointLayers","getLayers","removeLayer","addTo","bringToFront","_createPointLayer","geoJson","_pointLayerIds","_popup","onEachFeature","bindPopup","_popupOptions","fLayer","geometryToLayer","_hasProportionalSymbols","centroid","getPolygonCentroid","geometry","featureId","id","pointjson","getPointJson","addData","pts","p1","p2","f","twicearea","nPts","_checkForProportionalSymbols","renderer","serviceInfo","rend","rendererInfo","transparency","EsriLeaflet","FeatureLayer","addInitHook","EsriLeafletCluster","EsriLeafletClusterFeatureLayer","version"],"mappings":"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"}